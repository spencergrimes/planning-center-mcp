apiVersion: apps/v1
kind: Deployment
metadata:
  name: planning-center-mcp
  labels:
    app: planning-center-mcp
spec:
  replicas: 3
  selector:
    matchLabels:
      app: planning-center-mcp
  template:
    metadata:
      labels:
        app: planning-center-mcp
    spec:
      containers:
      - name: planning-center-mcp
        image: planning-center-mcp:latest
        ports:
        - containerPort: 3001
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3001"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: planning-center-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: planning-center-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: planning-center-secrets
              key: jwt-secret
        - name: COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name: planning-center-secrets
              key: cookie-secret
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: planning-center-secrets
              key: encryption-key
        - name: PCO_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: planning-center-secrets
              key: pco-client-id
        - name: PCO_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: planning-center-secrets
              key: pco-client-secret
        - name: FRONTEND_URL
          value: "https://planning-center-chat.example.com"
        - name: MCP_SERVER_NAME
          value: "planning-center-mcp"
        - name: MCP_SERVER_VERSION
          value: "1.0.0"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: planning-center-mcp-service
spec:
  selector:
    app: planning-center-mcp
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3001
  type: LoadBalancer

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: planning-center-mcp-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/websocket-services: "planning-center-mcp-service"
spec:
  tls:
  - hosts:
    - api.planning-center-mcp.example.com
    secretName: planning-center-mcp-tls
  rules:
  - host: api.planning-center-mcp.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: planning-center-mcp-service
            port:
              number: 80